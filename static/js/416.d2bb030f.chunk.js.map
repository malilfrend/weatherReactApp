{"version":3,"file":"static/js/416.d2bb030f.chunk.js","mappings":"qOAEA,EADoB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,+TAAmU,KAAQ,QAAS,MAAS,Y,UCMpfA,EAAgB,SAAuBC,EAAOC,GAChD,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,CAAC,EAAGJ,GAAQ,CAAC,EAAG,CAC5FC,IAAKA,EACLI,KAAMC,IAET,EAEDP,EAAcQ,YAAc,gBAC5B,MAA4BL,EAAAA,WAAiBH,GCd7C,EAAgC,oCAAhC,EAAkF,kCAAlF,EAAiI,iCAAjI,EAAgL,kC,6BCiBjK,SAASS,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,KACXC,GAAUC,EAAAA,EAAAA,IAAe,SAACC,GAAD,OAAWA,EAAMC,SAASH,OAA1B,IAC/B,EAA4CT,EAAAA,UAAwB,GAApE,eAAOa,EAAP,KAAuBC,EAAvB,KACMC,EAAaF,EAAc,UAAMG,GAAkB,GAMzD,EAAeC,EAAAA,EAAAA,UAARC,GAAP,eAUA,OACE,yBACGT,EAAU,MACT,iBAAKU,UAAWH,EAAhB,WACE,SAAC,IAAD,CAAQI,KAAK,UAAUC,QAAS,kBAAMP,GAAmBD,EAAzB,EAAhC,2BAGA,iBAAKM,UAAWH,EAAgB,IAAMD,EAAtC,WACE,gBAAKI,UAAWH,EAAcK,QAAS,kBAAMP,GAAkB,EAAxB,EAAvC,UACE,SAAC,EAAD,OAEF,UAAC,IAAD,CACEI,KAAMA,EACNI,KAAK,eACLC,OAAO,WACPC,cA9B6B,CACvCF,KAAM,GACNG,IAAK,KACLC,IAAK,MA4BKC,SAxBK,SAACC,GAChBrB,GAASsB,EAAAA,EAAAA,KAAiB,UAAKD,KAC/BrB,GAASuB,EAAAA,EAAAA,KAAkB,UAAKF,KAChCrB,GAASwB,EAAAA,EAAAA,OACTb,EAAKc,cACLlB,GAAmBD,EACpB,EAaS,WAME,SAAC,SAAD,CACEoB,MAAM,oBACNX,KAAK,OACLY,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,wBANf,UASE,SAAC,IAAD,CAAOC,UAAW,QAEpB,SAAC,SAAD,CACEJ,MAAM,WACNX,KAAK,MACLY,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,oCAEX,CACEhB,KAAM,SACNkB,IAAK,GACLF,QAAS,+BAEX,CACEhB,KAAM,SACNmB,KAAM,GACNH,QAAS,iCAhBf,UAmBE,SAAC,IAAD,CAAaI,MAAO,CAAEC,MAAO,aAE/B,SAAC,SAAD,CACER,MAAM,YACNX,KAAK,MACLY,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,qCAEX,CACEhB,KAAM,SACNkB,IAAK,IACLF,QAAS,gCAEX,CACEhB,KAAM,SACNmB,KAAM,IACNH,QAAS,kCAhBf,UAmBE,SAAC,IAAD,CAAaI,MAAO,CAAEC,MAAO,aAE/B,SAAC,IAAD,CAAQC,SAAS,SAASF,MAAO,CAAEC,MAAO,QAA1C,+CASb,C","sources":["../node_modules/@ant-design/icons-svg/es/asn/CloseOutlined.js","../node_modules/@ant-design/icons/es/icons/CloseOutlined.js","webpack://my-app/./src/components/componentsForLocations/SaveLocation/SaveLocation.module.scss?6118","components/componentsForLocations/SaveLocation/index.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar CloseOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z\" } }] }, \"name\": \"close\", \"theme\": \"outlined\" };\nexport default CloseOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloseOutlined = function CloseOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloseOutlinedSvg\n  }));\n};\n\nCloseOutlined.displayName = 'CloseOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseOutlined);","// extracted by mini-css-extract-plugin\nexport default {\"save_location\":\"SaveLocation_save_location__fdbdN\",\"save_window\":\"SaveLocation_save_window__k6c5f\",\"close_item\":\"SaveLocation_close_item__xtbJt\",\"show_window\":\"SaveLocation_show_window__zHKQx\",\"cardDown\":\"SaveLocation_cardDown__RO9bk\"};","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Button, Input, Form, InputNumber } from 'antd';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport s from './SaveLocation.module.scss';\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks';\r\nimport {\r\n  setChosenLocation,\r\n  setLocationsItem,\r\n  resetFlag,\r\n} from './../../../redux/slices/locationsSlice';\r\n\r\ntype InitialValuesType = {\r\n  name: string;\r\n  lat: number | null;\r\n  lon: number | null;\r\n};\r\n\r\nexport default function SaveLocation() {\r\n  const dispatch = useAppDispatch();\r\n  const isError = useAppSelector((state) => state.location.isError);\r\n  const [showSaveWindow, setShowSaveWindow] = React.useState<boolean>(false);\r\n  const showWindow = showSaveWindow ? `${s.show_window}` : '';\r\n  const initialValues: InitialValuesType = {\r\n    name: '',\r\n    lat: null,\r\n    lon: null,\r\n  };\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values: InitialValuesType): void => {\r\n    dispatch(setLocationsItem({ ...values }));\r\n    dispatch(setChosenLocation({ ...values }));\r\n    dispatch(resetFlag());\r\n    form.resetFields();\r\n    setShowSaveWindow(!showSaveWindow);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isError ? null : (\r\n        <div className={s.save_location}>\r\n          <Button type=\"primary\" onClick={() => setShowSaveWindow(!showSaveWindow)}>\r\n            Add location\r\n          </Button>\r\n          <div className={s.save_window + ' ' + showWindow}>\r\n            <div className={s.close_item} onClick={() => setShowSaveWindow(false)}>\r\n              <CloseOutlined />\r\n            </div>\r\n            <Form\r\n              form={form}\r\n              name=\"add location\"\r\n              layout=\"vertical\"\r\n              initialValues={initialValues}\r\n              onFinish={onFinish}>\r\n              <Form.Item\r\n                label=\"Title of location\"\r\n                name=\"name\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input title!',\r\n                  },\r\n                ]}>\r\n                <Input maxLength={16} />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Latitude\"\r\n                name=\"lat\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input latitude as number!',\r\n                  },\r\n                  {\r\n                    type: 'number',\r\n                    max: 90,\r\n                    message: \"It can't be more 90 degrees\",\r\n                  },\r\n                  {\r\n                    type: 'number',\r\n                    min: -90,\r\n                    message: \"It can't be less -90 degrees\",\r\n                  },\r\n                ]}>\r\n                <InputNumber style={{ width: '100%' }} />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Longitude\"\r\n                name=\"lon\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input longitude as number!',\r\n                  },\r\n                  {\r\n                    type: 'number',\r\n                    max: 180,\r\n                    message: \"It can't be more 180 degrees\",\r\n                  },\r\n                  {\r\n                    type: 'number',\r\n                    min: -180,\r\n                    message: \"It can't be less -180 degrees\",\r\n                  },\r\n                ]}>\r\n                <InputNumber style={{ width: '100%' }} />\r\n              </Form.Item>\r\n              <Button htmlType=\"submit\" style={{ width: '100%' }}>\r\n                Add and see new weather\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":["CloseOutlined","props","ref","React","AntdIcon","_objectSpread","icon","CloseOutlinedSvg","displayName","SaveLocation","dispatch","useAppDispatch","isError","useAppSelector","state","location","showSaveWindow","setShowSaveWindow","showWindow","s","Form","form","className","type","onClick","name","layout","initialValues","lat","lon","onFinish","values","setLocationsItem","setChosenLocation","resetFlag","resetFields","label","rules","required","message","maxLength","max","min","style","width","htmlType"],"sourceRoot":""}